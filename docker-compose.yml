version: '3.5'

networks:
  develop:
    ipam:
      config:
      - subnet: 172.16.1.0/24

services:
  mysql57:
    build: 
      context: ./mysql
      dockerfile: 57.Dockerfile
    container_name: mysql57
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWD_57}
    ports:
      - 3307:3306
    volumes:
      - ./mysql/5.7/data:/var/lib/mysql
      - ./logs/mysql/5.7:/var/log/mysql
    command: 
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
      --max_allowed_packet=128M
      --sql-mode=
      --default-time-zone=+8:00
      --lower-case-table-names=1
    networks:
      develop:
        ipv4_address: 172.16.1.9

  elasticsearch:
    build:
      context: ./elasticsearch
      args:
        - ELK_VER=${ELK_VERSION}
    container_name: elasticsearch
    restart: always
    environment:
      - cluster.name=cc-docker-cluster
      - node.name=cc-docker-node
      - bootstrap.memory_lock=true
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
      # - xpack.security.transport.ssl.enabled=false
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      # - discovery.seed_hosts=
      # - cluster.initial_master_nodes=cc-docker-node
      - discovery.type=single-node
    volumes:
      - "./elasticsearch/data/${ELK_VERSION}:/usr/share/elasticsearch/data"
      - "./logs/elasticsearch/${ELK_VERSION}:/usr/share/elasticsearch/logs"
      - "./elasticsearch/plugins/${ELK_VERSION}:/usr/share/elasticsearch/plugins"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
        develop:
          ipv4_address: 172.16.1.10
    depends_on:
      - redis

  kibana:
    build: 
      context: ./kibana
      args:
        - ELK_VER=${ELK_VERSION}
    container_name: kibana
    ports:
      - 5601:5601
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      - XPACK_GRAPH_ENABLED=true
      - TIMELION_ENABLED=true
    networks:
        develop:
          ipv4_address: 172.16.1.11
    depends_on:
      - elasticsearch

  openresty:
    build:
      context: ./openresty
      dockerfile: Dockerfile
    container_name: openresty
    restart: always
    ports:
      - 80:80
    volumes:
      - "${WWWROOT_PATH}:/data/wwwroot"
      - "./logs/wwwlogs:/data/wwwlogs"
      - type: "bind"
        source: ./openresty/config/conf
        target: /usr/local/openresty/nginx/conf
      - type: "bind"
        source: ./openresty/config/vhost
        target: /usr/local/openresty/nginx/conf/vhost
      - type: "bind"
        source: ./openresty/config/rewrite
        target: /usr/local/openresty/nginx/conf/rewrite
      - type: "bind"
        source: ./logs/nginx
        target: /usr/local/openresty/nginx/logs
    networks:
        develop:
          ipv4_address: 172.16.1.2
    depends_on:
      - php73
      - php81
      - php82

  redis:
    build:
      context: ./redis
      dockerfile: redis.Dockerfile
    container_name: redis
    restart: always
    volumes:
      - "./redis/redis.conf:/etc/redis/redis.conf"
      - "./redis/data:/data/db"
      - "./logs/redis:/data/logs"
    command: ["redis-server","/etc/redis/redis.conf"]
    ports:
      - 6379:6379
    networks:
        develop:
          ipv4_address: 172.16.1.3
    depends_on:
      - mysql57
  php73:
    build:
      context: ./php
      dockerfile: php73.Dockerfile
    container_name: php73
    restart: always
    volumes:
      - "${WWWROOT_PATH}:/data/wwwroot"
      - "./php/php73/etc:/usr/local/etc"
    working_dir: /data/wwwroot/
    #privileged: true
    networks:
        develop:
          ipv4_address: 172.16.1.73
    depends_on:
      - elasticsearch
      - redis
  php81:
    build:
      context: ./php
      dockerfile: php81.Dockerfile
    image: php81
    container_name: php81
    restart: always
    volumes:
      - "${WWWROOT_PATH}:/data/wwwroot"
      - "./php/php81/etc:/usr/local/etc"
    working_dir: /data/wwwroot/
    networks:
        develop:
          ipv4_address: 172.16.1.81
    depends_on:
      - elasticsearch
      - redis
  php82:
    build:
      context: ./php
      dockerfile: php82.Dockerfile
    container_name: php82
    restart: always
    volumes:
      - "${WWWROOT_PATH}:/data/wwwroot"
      - "./php/php82/etc:/usr/local/etc"
    working_dir: /data/wwwroot/
    networks:
        develop:
          ipv4_address: 172.16.1.82
    depends_on:
      - elasticsearch
      - redis